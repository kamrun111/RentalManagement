// <auto-generated />
using Building.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Building.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250413170755_SeedDataAdd")]
    partial class SeedDataAdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Building.Models.Flat", b =>
                {
                    b.Property<int>("FlatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlatId"));

                    b.Property<string>("FlatName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("FlatRent")
                        .HasColumnType("float");

                    b.Property<string>("FlatSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlatTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("FloorId")
                        .HasColumnType("int");

                    b.HasKey("FlatId");

                    b.HasIndex("FlatTypeId");

                    b.HasIndex("FloorId");

                    b.ToTable("Flats");

                    b.HasData(
                        new
                        {
                            FlatId = 1,
                            FlatName = "101-A",
                            FlatRent = 10000.0,
                            FlatSize = "1200",
                            FlatTypeId = 1,
                            FloorId = 1
                        },
                        new
                        {
                            FlatId = 2,
                            FlatName = "101-B",
                            FlatRent = 20000.0,
                            FlatSize = "1400",
                            FlatTypeId = 1,
                            FloorId = 1
                        },
                        new
                        {
                            FlatId = 3,
                            FlatName = "103-C",
                            FlatRent = 25000.0,
                            FlatSize = "1600",
                            FlatTypeId = 1,
                            FloorId = 1
                        });
                });

            modelBuilder.Entity("Building.Models.FlatType", b =>
                {
                    b.Property<int>("FlatTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlatTypeId"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlatTypeId");

                    b.ToTable("FlatTypes");

                    b.HasData(
                        new
                        {
                            FlatTypeId = 1,
                            Type = "Flat"
                        },
                        new
                        {
                            FlatTypeId = 2,
                            Type = "Commercial"
                        },
                        new
                        {
                            FlatTypeId = 3,
                            Type = "Shop"
                        });
                });

            modelBuilder.Entity("Building.Models.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("FloorId");

                    b.ToTable("Floors");

                    b.HasData(
                        new
                        {
                            FloorId = 1,
                            FloorName = "1"
                        },
                        new
                        {
                            FloorId = 2,
                            FloorName = "2"
                        },
                        new
                        {
                            FloorId = 3,
                            FloorName = "3"
                        });
                });

            modelBuilder.Entity("Building.Models.Flat", b =>
                {
                    b.HasOne("Building.Models.FlatType", "FlatType")
                        .WithMany()
                        .HasForeignKey("FlatTypeId");

                    b.HasOne("Building.Models.Floor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId");

                    b.Navigation("FlatType");

                    b.Navigation("Floor");
                });
#pragma warning restore 612, 618
        }
    }
}
