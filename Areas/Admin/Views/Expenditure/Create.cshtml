@model Expenditure

@{
    ViewData["Title"] = "Create Expenditure";
}

<div class="container mt-4" style="max-height: 80vh; overflow-y: auto; overflow-x: auto;">
    <h2 class="text-center">Create Expenditure</h2>

    <form asp-action="Create" method="post">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="LocationId">Location</label>
                <select asp-for="LocationId" class="form-control" asp-items="ViewBag.LocationList">
                    <option value="">-- Select Location --</option>
                </select>
                <span asp-validation-for="LocationId" class="text-danger"></span>
            </div>

            <div class="col-md-6">
                <label asp-for="ExpenditureDate"></label>
                <input asp-for="ExpenditureDate" type="date" class="form-control" />
                <span asp-validation-for="ExpenditureDate" class="text-danger"></span>
            </div>
        </div>

        <div class="mb-3">
            <label asp-for="Description"></label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <h4>Expenditure Details</h4>

        <div class="table-responsive">
            <table class="table" id="detailsTable">
                <thead>
                    <tr>
                        <th>Expense</th>
                        <th>Amount</th>
                        <th>Remarks</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <select asp-for="ExpenditureDetails[0].ExpenseId" class="form-control" asp-items="ViewBag.ExpenseList">
                                <option value="">-- Select Expense --</option>
                            </select>
                            <span asp-validation-for="ExpenditureDetails[0].ExpenseId" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="ExpenditureDetails[0].Amount" type="number" step="0.01" min="0" class="form-control detail-amount" />
                        </td>
                        <td>
                            <input asp-for="ExpenditureDetails[0].Remarks" type="text" class="form-control" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <button type="button" class="btn btn-secondary mb-3" onclick="addRow()">Add Detail</button>

        <div class="mb-3 row">
            <label class="col-sm-3 col-form-label">Total Amount</label>
            <div class="col-sm-9">
                <input id="totalAmount" name="TotalAmount" type="text" class="form-control" readonly />
            </div>
        </div>

        <button type="submit" class="btn btn-primary me-2">Create</button>
        <a asp-action="Index" class="btn btn-secondary ">Back to List</a>

    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        let detailIndex = 1;

        function addRow() {
            const tableBody = document.querySelector('#detailsTable tbody');
            const newRow = document.createElement('tr');

            newRow.innerHTML = `
                <td>
                    <select name="ExpenditureDetails[${detailIndex}].ExpenseId" class="form-control" required>
                        <option value="">-- Select Expense --</option>
        @foreach (var expense in (SelectList)ViewBag.ExpenseList)
        {
            <text><option value="@expense.Value">@expense.Text</option></text>
        }
                    </select>
                </td>
                <td>
                    <input name="ExpenditureDetails[${detailIndex}].Amount" type="number" step="0.01" min="0" class="form-control detail-amount" required />
                </td>
                <td>
                    <input name="ExpenditureDetails[${detailIndex}].Remarks" type="text" class="form-control" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button>
                </td>
            `;

            tableBody.appendChild(newRow);
            detailIndex++;
            attachEvents();
        }

        function removeRow(button) {
            const row = button.closest('tr');
            row.remove();
            calculateTotalAmount();
        }

        function attachEvents() {
            document.querySelectorAll('.detail-amount').forEach(input => {
                input.oninput = function () {
                    calculateTotalAmount();
                };
            });
        }

        function calculateTotalAmount() {
            let total = 0;
            document.querySelectorAll('.detail-amount').forEach(input => {
                total += parseFloat(input.value) || 0;
            });
            document.getElementById('totalAmount').value = total.toFixed(2);
        }

        attachEvents();
    </script>
}
